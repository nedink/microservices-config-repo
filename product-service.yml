management:
  endpoints:
    web:
      exposure:
        include: ["hystrix.stream", "health", "info", "env"]
spring:
  cloud:
    services:
      #registrationMethod: direct
      registrationMethod: route
  datasource:
    url: ${cloud.services.mysql.connection.jdbcurl}
    username: ${cloud.services.mysql.connection.username}
    password: ${cloud.services.mysql.connection.password}
    tomcat:
      test-on-borrow: true
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL55Dialect
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    baseUrl: ${vcap.services.zipkin.credentials.url}/
sample:
  zipkin: 
    enabled: true
feign:
  hystrix:
    enabled: true
security:
  oauth2:
    client:
      client-id: ${vcap.services.uaa.credentials.client_id}
      client-secret: ${vcap.services.uaa.credentials.client_secret}
      access-token-uri: ${vcap.services.uaa.credentials.url}/oauth/token
      user-authorization-uri: ${vcap.services.uaa.credentials.url}/oauth/authorize
      scope: openid,product.read,product.write,cart.read,cart.write
    resource:
      user-info-uri: ${vcap.services.uaa.credentials.url}/userinfo
      token-info-uri: ${vcap.services.uaa.credentials.url}/introspect
      prefer-token-info: true
eureka:
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20
  client:
    registerWithEureka: true
    serviceUrl: ${vcap.services.discovery.credentials.uri}/eureka/
hystrix:
  shareSecurityContext: true
logging:
  level:
    org.springframework.security: DEBUG
hystrix:
  stream:
    queue:
      enabled: false
